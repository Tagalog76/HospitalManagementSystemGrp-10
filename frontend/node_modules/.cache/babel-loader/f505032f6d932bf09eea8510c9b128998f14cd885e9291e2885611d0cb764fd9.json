{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LA\\\\Desktop\\\\React\\\\HospitalManagementSystemGrp-10\\\\frontend\\\\src\\\\pages\\\\AppointmentBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentBooking = ({\n  onSubmit\n}) => {\n  _s();\n  const [date, setDate] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    // Function to fetch doctors from API\n    const fetchDoctors = async () => {\n      try {\n        const response = await fetch('api/doctors'); // Replace 'api/doctors' with your actual API endpoint\n        const data = await response.json();\n        setDoctors(data); // Assuming API response is an array of doctor objects\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({\n      date,\n      doctorId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book Appointment Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Doctor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: doctorId,\n        onChange: e => setDoctorId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doctor.id,\n          children: doctor.name\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentBooking, \"hQsxdaQ8g5XjlZ2RnxBj89snThE=\");\n_c = AppointmentBooking;\nexport default AppointmentBooking;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBooking\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AppointmentBooking","onSubmit","_s","date","setDate","doctorId","setDoctorId","doctors","setDoctors","fetchDoctors","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","map","doctor","id","name","_c","$RefreshReg$"],"sources":["C:/Users/LA/Desktop/React/HospitalManagementSystemGrp-10/frontend/src/pages/AppointmentBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AppointmentBooking = ({ onSubmit }) => {\r\n  const [date, setDate] = useState('');\r\n  const [doctorId, setDoctorId] = useState('');\r\n  const [doctors, setDoctors] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Function to fetch doctors from API\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const response = await fetch('api/doctors'); // Replace 'api/doctors' with your actual API endpoint\r\n        const data = await response.json();\r\n        setDoctors(data); // Assuming API response is an array of doctor objects\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ date, doctorId });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book Appointment Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Date:</label>\r\n        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\r\n        \r\n        <label>Select Doctor:</label>\r\n        <select value={doctorId} onChange={(e) => setDoctorId(e.target.value)}>\r\n          <option value=\"\">Select Doctor</option>\r\n          {doctors.map(doctor => (\r\n            <option key={doctor.id} value={doctor.id}>{doctor.name}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <button type=\"submit\">Book Appointment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentBooking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}