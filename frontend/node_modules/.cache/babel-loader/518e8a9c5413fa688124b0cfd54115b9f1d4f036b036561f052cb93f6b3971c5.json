{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LA\\\\Desktop\\\\React\\\\HospitalManagementSystemGrp-10\\\\frontend\\\\src\\\\components\\\\DoctorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorPage = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/appointments');\n      const appointmentsData = response.data.appointments || [];\n      const formattedAppointments = await Promise.all(appointmentsData.map(async appointment => {\n        const [date, time] = appointment.appointment_date.split(' ');\n        const formattedTime = convertTo12HourFormat(time);\n        const patientResponse = await axios.get(`http://127.0.0.1:8000/api/getPatients/${appointment.patient_id}`);\n        console.log(patientResponse.data);\n        const patient = patientResponse.data.patient || {};\n        return {\n          ...appointment,\n          date,\n          time: formattedTime,\n          patient_name: `${patient.first_name} ${patient.last_name}`\n        };\n      }));\n      setAppointments(formattedAppointments);\n      setAppointments(appointments.filter(appointment => appointment.status != 'cancelled' && appointment.status != 'completed'));\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n  const cancelAppointment = async appointmentId => {\n    try {\n      await axios.put(`http://127.0.0.1:8000/api/appointments/${appointmentId}/cancel`);\n      // Remove the canceled appointment from the local state\n\n      fetchAppointments();\n    } catch (error) {\n      console.error('Error canceling appointment:', error);\n    }\n  };\n  const convertTo12HourFormat = time => {\n    const [hours, minutes] = time.split(':');\n    let period = 'AM';\n    let hour = parseInt(hours, 10);\n    if (hour >= 12) {\n      period = 'PM';\n      if (hour > 12) {\n        hour -= 12;\n      }\n    }\n    if (hour === 0) {\n      hour = 12;\n    }\n    return `${hour}:${minutes} ${period}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.patient_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm me-2\",\n                onClick: () => cancelAppointment(appointment.id),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorPage, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = DoctorPage;\nexport default DoctorPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DoctorPage","_s","appointments","setAppointments","fetchAppointments","response","get","appointmentsData","data","formattedAppointments","Promise","all","map","appointment","date","time","appointment_date","split","formattedTime","convertTo12HourFormat","patientResponse","patient_id","console","log","patient","patient_name","first_name","last_name","filter","status","error","cancelAppointment","appointmentId","put","hours","minutes","period","hour","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/LA/Desktop/React/HospitalManagementSystemGrp-10/frontend/src/components/DoctorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DoctorPage = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchAppointments();\r\n    }, []);\r\n\r\n    const fetchAppointments = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:8000/api/appointments');\r\n            const appointmentsData = response.data.appointments || [];\r\n            const formattedAppointments = await Promise.all(appointmentsData.map(async appointment => {\r\n                const [date, time] = appointment.appointment_date.split(' ');\r\n                const formattedTime = convertTo12HourFormat(time);\r\n                const patientResponse = await axios.get(`http://127.0.0.1:8000/api/getPatients/${appointment.patient_id}`);\r\n                console.log(patientResponse.data);\r\n                const patient = patientResponse.data.patient || {};\r\n                return {\r\n                    ...appointment,\r\n                    date,\r\n                    time: formattedTime,\r\n                    patient_name: `${patient.first_name} ${patient.last_name}`,\r\n                };\r\n                \r\n            }));\r\n            setAppointments(formattedAppointments);\r\n            setAppointments(appointments.filter(appointment => appointment.status != 'cancelled' && appointment.status != 'completed'));\r\n        } catch (error) {\r\n            console.error('Error fetching appointments:', error);\r\n        }\r\n    };\r\n\r\n    const cancelAppointment = async (appointmentId) => {\r\n        try {\r\n            await axios.put(`http://127.0.0.1:8000/api/appointments/${appointmentId}/cancel`);\r\n            // Remove the canceled appointment from the local state\r\n            \r\n            fetchAppointments();\r\n        } catch (error) {\r\n            console.error('Error canceling appointment:', error);\r\n        }\r\n    };\r\n\r\n    const convertTo12HourFormat = (time) => {\r\n        const [hours, minutes] = time.split(':');\r\n        let period = 'AM';\r\n        let hour = parseInt(hours, 10);\r\n\r\n        if (hour >= 12) {\r\n            period = 'PM';\r\n            if (hour > 12) {\r\n                hour -= 12;\r\n            }\r\n        }\r\n\r\n        if (hour === 0) {\r\n            hour = 12;\r\n        }\r\n\r\n        return `${hour}:${minutes} ${period}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h1 className=\"mb-4\">Appointments</h1>\r\n            {appointments.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Time</th>\r\n                                <th>Patient</th>\r\n                                <th>Status</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {appointments.map(appointment => (\r\n                                <tr key={appointment.id}>\r\n                                    <td>{appointment.date}</td>\r\n                                    <td>{appointment.time}</td>\r\n                                    <td>{appointment.patient_name}</td>\r\n                                    <td>{appointment.status}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger btn-sm me-2\" onClick={() => cancelAppointment(appointment.id)}>Cancel</button>\r\n                                        {/* Add more actions if needed */}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ) : (\r\n                <p>No appointments found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}