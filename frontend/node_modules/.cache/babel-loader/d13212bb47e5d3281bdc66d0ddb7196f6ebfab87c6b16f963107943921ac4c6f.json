{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LA\\\\Desktop\\\\React\\\\HospitalManagementSystemGrp-10\\\\frontend\\\\src\\\\components\\\\ReceptionistPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceptionistPage = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [newAppointment, setNewAppointment] = useState({\n    patientId: '',\n    doctorId: '',\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  useEffect(() => {\n    fetchAppointments();\n    fetchDoctors();\n    fetchPatients();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const [appointmentsResponse, doctorsResponse, patientResponse] = await Promise.all([axios.get('http://127.0.0.1:8000/api/appointments'), axios.get('http://127.0.0.1:8000/api/doctors'), axios.get('http://127.0.0.1:8000/api/patients')]);\n      const appointmentsData = appointmentsResponse.data.appointments || [];\n      const doctorsData = doctorsResponse.data.doctors || [];\n      const patientsData = patientResponse.data.users || [];\n      const doctorsMap = doctorsData.reduce((map, doctor) => {\n        map[doctor.doctor_id] = {\n          name: `${doctor.first_name} ${doctor.last_name}`\n        };\n        return map;\n      }, {});\n      const patientMap = patientsData.reduce((map, patient) => {\n        map[patient.id] = {\n          name: `${patient.first_name} ${patient.last_name}`\n        };\n        return map;\n      }, {});\n      const formattedAppointments = appointmentsData.map(appointment => {\n        const [date, time] = appointment.appointment_date.split(' ');\n        const formattedTime = convertTo12HourFormat(time);\n        const doctorInfo = doctorsMap[appointment.doctor_id] || {\n          name: 'Unknown Doctor'\n        };\n        const patientInfo = patientMap[appointment.patient_id] || {\n          name: 'Unknown Patient'\n        };\n        return {\n          ...appointment,\n          date,\n          time: formattedTime,\n          doctor_name: doctorInfo.name,\n          patient_name: patientInfo.name\n        };\n      });\n      setAppointments(formattedAppointments);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/doctors');\n      const doctorsData = response.data.doctors || [];\n      setDoctors(doctorsData);\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/patients');\n      const patientsData = response.data.users || [];\n      setPatients(patientsData);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const convertTo24HourFormat = time12h => {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (modifier === 'PM') {\n      hours = (parseInt(hours, 10) + 12).toString().padStart(2, '0');\n    }\n    return `${hours}:${minutes}`;\n  };\n  const convertTo12HourFormat = time => {\n    const [hours, minutes] = time.split(':');\n    let period = 'AM';\n    let hour = parseInt(hours, 10);\n    if (hour >= 12) {\n      period = 'PM';\n      if (hour > 12) {\n        hour -= 12;\n      }\n    }\n    if (hour === 0) {\n      hour = 12;\n    }\n    return `${hour.toString().padStart(2, '0')}:${minutes} ${period}`;\n  };\n  const generateTimeOptions = () => {\n    const times = [];\n    for (let i = 0; i < 24; i++) {\n      for (let j = 0; j < 60; j += 30) {\n        const hour = i.toString().padStart(2, '0');\n        const minute = j.toString().padStart(2, '0');\n        times.push(convertTo12HourFormat(`${hour}:${minute}`));\n      }\n    }\n    return times;\n  };\n  const handleDeleteAppointment = async appointmentId => {\n    try {\n      await axios.delete(`http://127.0.0.1:8000/api/appointments/${appointmentId}`);\n      fetchAppointments(); // Refresh appointments after deletion\n    } catch (error) {\n      console.error('Error deleting appointment:', error);\n    }\n  };\n  const handleNewAppointmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(value);\n    setNewAppointment({\n      ...newAppointment,\n      [name]: value\n    });\n  };\n  const handleNewAppointmentSubmit = async e => {\n    e.preventDefault();\n    const appointmentDateTime = `${newAppointment.appointmentDate} ${convertTo24HourFormat(newAppointment.appointmentTime)}`;\n    try {\n      const newAppointmentData = {\n        patient_id: newAppointment.patientId,\n        doctor_id: newAppointment.doctorId,\n        appointment_date: appointmentDateTime,\n        reason: newAppointment.reason\n      };\n      await axios.post('http://127.0.0.1:8000/api/appointments', newAppointmentData);\n      fetchAppointments();\n      setNewAppointment({\n        patientId: '',\n        doctorId: '',\n        appointmentDate: '',\n        appointmentTime: '',\n        reason: ''\n      });\n    } catch (error) {\n      console.error('Error adding appointment:', error);\n    }\n  };\n  const updateAppointmentStatus = async (appointmentId, newStatus) => {\n    try {\n      await axios.patch(`http://127.0.0.1:8000/api/appointments/${appointmentId}`, {\n        status: newStatus\n      });\n      fetchAppointments(); // Refresh appointments after updating the status\n    } catch (error) {\n      console.error(`Error updating appointment status to ${newStatus}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Receptionist Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-hover table-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Doctor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointment.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointment.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointment.doctor_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointment.patient_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-control form-control-sm\",\n                    value: appointment.status,\n                    onChange: e => updateAppointmentStatus(appointment.id, e.target.value),\n                    style: {\n                      color: 'black'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"pending\",\n                      children: \"Pending\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"confirmed\",\n                      children: \"Confirmed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"completed\",\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"cancelled\",\n                      children: \"Cancelled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this)]\n              }, appointment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: \"No appointments found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewAppointmentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"patientId\",\n              className: \"form-label\",\n              children: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"patientId\",\n              name: \"patientId\",\n              value: newAppointment.patientId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              style: {\n                color: 'black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), patients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: patient.id,\n                children: patient.first_name + \" \" + patient.last_name\n              }, patient.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"doctorId\",\n              className: \"form-label\",\n              children: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"doctorId\",\n              name: \"doctorId\",\n              value: newAppointment.doctorId,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              style: {\n                color: 'black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor.doctor_id,\n                children: doctor.first_name + \" \" + doctor.last_name\n              }, doctor.doctor_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentDate\",\n              className: \"form-label\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"appointmentDate\",\n              name: \"appointmentDate\",\n              value: newAppointment.appointmentDate,\n              onChange: handleNewAppointmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"appointmentTime\",\n              className: \"form-label\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              id: \"appointmentTime\",\n              name: \"appointmentTime\",\n              value: newAppointment.appointmentTime,\n              onChange: handleNewAppointmentChange,\n              required: true,\n              style: {\n                color: 'black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this), generateTimeOptions().map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time,\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reason\",\n              className: \"form-label\",\n              children: \"Reason\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              id: \"reason\",\n              name: \"reason\",\n              value: newAppointment.reason,\n              onChange: handleNewAppointmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s(ReceptionistPage, \"lH8+rhmm/c9KD5w1Of75wTHdizA=\");\n_c = ReceptionistPage;\nexport default ReceptionistPage;\nvar _c;\n$RefreshReg$(_c, \"ReceptionistPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ReceptionistPage","_s","appointments","setAppointments","doctors","setDoctors","patients","setPatients","newAppointment","setNewAppointment","patientId","doctorId","appointmentDate","appointmentTime","reason","fetchAppointments","fetchDoctors","fetchPatients","appointmentsResponse","doctorsResponse","patientResponse","Promise","all","get","appointmentsData","data","doctorsData","patientsData","users","doctorsMap","reduce","map","doctor","doctor_id","name","first_name","last_name","patientMap","patient","id","formattedAppointments","appointment","date","time","appointment_date","split","formattedTime","convertTo12HourFormat","doctorInfo","patientInfo","patient_id","doctor_name","patient_name","error","console","response","convertTo24HourFormat","time12h","modifier","hours","minutes","parseInt","toString","padStart","period","hour","generateTimeOptions","times","i","j","minute","push","handleDeleteAppointment","appointmentId","delete","handleNewAppointmentChange","e","value","target","log","handleNewAppointmentSubmit","preventDefault","appointmentDateTime","newAppointmentData","post","updateAppointmentStatus","newStatus","patch","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onChange","style","color","onSubmit","htmlFor","required","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/LA/Desktop/React/HospitalManagementSystemGrp-10/frontend/src/components/ReceptionistPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReceptionistPage = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [newAppointment, setNewAppointment] = useState({\r\n        patientId: '',\r\n        doctorId: '',\r\n        appointmentDate: '',\r\n        appointmentTime: '',\r\n        reason: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchAppointments();\r\n        fetchDoctors();\r\n        fetchPatients();\r\n    }, []);\r\n\r\n    const fetchAppointments = async () => {\r\n        try {\r\n            const [appointmentsResponse, doctorsResponse, patientResponse] = await Promise.all([\r\n                axios.get('http://127.0.0.1:8000/api/appointments'),\r\n                axios.get('http://127.0.0.1:8000/api/doctors'),\r\n                axios.get('http://127.0.0.1:8000/api/patients')\r\n            ]);\r\n\r\n            const appointmentsData = appointmentsResponse.data.appointments || [];\r\n            const doctorsData = doctorsResponse.data.doctors || [];\r\n            const patientsData = patientResponse.data.users || [];\r\n\r\n            const doctorsMap = doctorsData.reduce((map, doctor) => {\r\n                map[doctor.doctor_id] = {\r\n                    name: `${doctor.first_name} ${doctor.last_name}`\r\n                };\r\n                return map;\r\n            }, {});\r\n            const patientMap = patientsData.reduce((map, patient) => {\r\n                map[patient.id] = {\r\n                    name: `${patient.first_name} ${patient.last_name}`\r\n                };\r\n                return map;\r\n            }, {});\r\n            \r\n            const formattedAppointments = appointmentsData.map(appointment => {\r\n                const [date, time] = appointment.appointment_date.split(' ');\r\n                const formattedTime = convertTo12HourFormat(time);\r\n                \r\n                const doctorInfo = doctorsMap[appointment.doctor_id] || { name: 'Unknown Doctor' };\r\n                const patientInfo = patientMap[appointment.patient_id] || { name: 'Unknown Patient'};\r\n                return {\r\n                    ...appointment,\r\n                    date,\r\n                    time: formattedTime,\r\n                    doctor_name: doctorInfo.name,\r\n                    patient_name: patientInfo.name\r\n                };\r\n            });\r\n            setAppointments(formattedAppointments);\r\n        } catch (error) {\r\n            console.error('Error fetching appointments:', error);\r\n        }\r\n    };\r\n\r\n    const fetchDoctors = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:8000/api/doctors');\r\n            const doctorsData = response.data.doctors || [];\r\n            setDoctors(doctorsData);\r\n        } catch (error) {\r\n            console.error('Error fetching doctors:', error);\r\n        }\r\n    };\r\n\r\n    const fetchPatients = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:8000/api/patients');\r\n            const patientsData = response.data.users || [];\r\n            setPatients(patientsData);\r\n        } catch (error) {\r\n            console.error('Error fetching patients:', error);\r\n        }\r\n    };\r\n\r\n    const convertTo24HourFormat = (time12h) => {\r\n        const [time, modifier] = time12h.split(' ');\r\n        let [hours, minutes] = time.split(':');\r\n\r\n        if (hours === '12') {\r\n            hours = '00';\r\n        }\r\n\r\n        if (modifier === 'PM') {\r\n            hours = (parseInt(hours, 10) + 12).toString().padStart(2, '0');\r\n        }\r\n\r\n        return `${hours}:${minutes}`;\r\n    };\r\n\r\n    const convertTo12HourFormat = (time) => {\r\n        const [hours, minutes] = time.split(':');\r\n        let period = 'AM';\r\n        let hour = parseInt(hours, 10);\r\n\r\n        if (hour >= 12) {\r\n            period = 'PM';\r\n            if (hour > 12) {\r\n                hour -= 12;\r\n            }\r\n        }\r\n\r\n        if (hour === 0) {\r\n            hour = 12;\r\n        }\r\n\r\n        return `${hour.toString().padStart(2, '0')}:${minutes} ${period}`;\r\n    };\r\n\r\n    const generateTimeOptions = () => {\r\n        const times = [];\r\n        for (let i = 0; i < 24; i++) {\r\n            for (let j = 0; j < 60; j += 30) {\r\n                const hour = i.toString().padStart(2, '0');\r\n                const minute = j.toString().padStart(2, '0');\r\n                times.push(convertTo12HourFormat(`${hour}:${minute}`));\r\n            }\r\n        }\r\n        return times;\r\n    };\r\n\r\n    const handleDeleteAppointment = async (appointmentId) => {\r\n        try {\r\n            await axios.delete(`http://127.0.0.1:8000/api/appointments/${appointmentId}`);\r\n            fetchAppointments(); // Refresh appointments after deletion\r\n        } catch (error) {\r\n            console.error('Error deleting appointment:', error);\r\n        }\r\n    };\r\n\r\n    const handleNewAppointmentChange = (e) => {\r\n        const { name, value } = e.target;\r\n            console.log(value);\r\n        setNewAppointment({\r\n            ...newAppointment,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleNewAppointmentSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const appointmentDateTime = `${newAppointment.appointmentDate} ${convertTo24HourFormat(newAppointment.appointmentTime)}`;\r\n\r\n        try {\r\n            const newAppointmentData = {\r\n                patient_id: newAppointment.patientId,\r\n                doctor_id: newAppointment.doctorId,\r\n                appointment_date: appointmentDateTime,\r\n                reason: newAppointment.reason\r\n            };\r\n            await axios.post('http://127.0.0.1:8000/api/appointments', newAppointmentData);\r\n            fetchAppointments();\r\n            setNewAppointment({\r\n                patientId: '',\r\n                doctorId: '',\r\n                appointmentDate: '',\r\n                appointmentTime: '',\r\n                reason: '',\r\n            });\r\n        } catch (error) {\r\n            console.error('Error adding appointment:', error);\r\n        }\r\n    };\r\n    const updateAppointmentStatus = async (appointmentId, newStatus) => {\r\n        try {\r\n            await axios.patch(`http://127.0.0.1:8000/api/appointments/${appointmentId}`, { status: newStatus });\r\n            fetchAppointments(); // Refresh appointments after updating the status\r\n        } catch (error) {\r\n            console.error(`Error updating appointment status to ${newStatus}:`, error);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h1 className=\"text-center\">Receptionist Dashboard</h1>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h2>All Appointments</h2>\r\n                    {appointments.length > 0 ? (\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped table-hover table-sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Date</th>\r\n                                        <th>Time</th>\r\n                                        <th>Doctor</th>\r\n                                        <th>Patient</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {appointments.map((appointment) => (\r\n                                        <tr key={appointment.id}>\r\n                                            <td>{appointment.date}</td>\r\n                                            <td>{appointment.time}</td>\r\n                                            <td>{appointment.doctor_name}</td>\r\n                                            <td>{appointment.patient_name}</td>\r\n                                            <td>{appointment.status}</td>\r\n                                            <td>\r\n                                            <select\r\n                                                    className=\"form-control form-control-sm\"\r\n                                                    value={appointment.status}\r\n                                                    onChange={(e) => updateAppointmentStatus(appointment.id, e.target.value)}\r\n                                                    style={{ color: 'black' }}\r\n                                                >\r\n                                                    <option value=\"pending\">Pending</option>\r\n                                                    <option value=\"confirmed\">Confirmed</option>\r\n                                                    <option value=\"completed\">Completed</option>\r\n                                                    <option value=\"cancelled\">Cancelled</option>\r\n                                                </select>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    ) : (\r\n                        <p className=\"text-center\">No appointments found.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* New Appointment Form */}\r\n            <div className=\"card mt-4\">\r\n                <div className=\"card-header\">\r\n                    <h2>Add New Appointment</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={handleNewAppointmentSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"patientId\" className=\"form-label\">Patient</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"patientId\"\r\n                                name=\"patientId\"\r\n                                value={newAppointment.patientId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                                style={{ color: 'black' }}\r\n                            >\r\n                                <option value=\"\" disabled>Select a patient</option>\r\n                                {patients.map(patient => (\r\n                                    <option key={patient.id} value={patient.id}>\r\n                                        {patient.first_name + \" \" + patient.last_name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"doctorId\" className=\"form-label\">Doctor</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"doctorId\"\r\n                                name=\"doctorId\"\r\n                                value={newAppointment.doctorId}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                                style={{ color: 'black' }}\r\n                            >\r\n                                <option value=\"\" disabled>Select a doctor</option>\r\n                                {doctors.map(doctor => (\r\n                                    <option key={doctor.doctor_id} value={doctor.doctor_id}>\r\n                                        {doctor.first_name + \" \" + doctor.last_name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"appointmentDate\" className=\"form-label\">Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                id=\"appointmentDate\"\r\n                                name=\"appointmentDate\"\r\n                                value={newAppointment.appointmentDate}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"appointmentTime\" className=\"form-label\">Time</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"appointmentTime\"\r\n                                name=\"appointmentTime\"\r\n                                value={newAppointment.appointmentTime}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                                style={{ color: 'black' }}\r\n                            >\r\n                                <option value=\"\" disabled>Select a time</option>\r\n                                {generateTimeOptions().map(time => (\r\n                                    <option key={time} value={time}>\r\n                                        {time}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"reason\" className=\"form-label\">Reason</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                id=\"reason\"\r\n                                name=\"reason\"\r\n                                value={newAppointment.reason}\r\n                                onChange={handleNewAppointmentChange}\r\n                                required\r\n                            ></textarea>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Add Appointment</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReceptionistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}