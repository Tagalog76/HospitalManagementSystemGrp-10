{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LA\\\\Desktop\\\\React\\\\HospitalManagementSystemGrp-10\\\\frontend\\\\src\\\\pages\\\\ViewMedicalRecord.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewMedicalRecord = ({\n  patientId\n}) => {\n  // Sample medical records data\n  const medicalRecords = [{\n    id: 1,\n    visit_date: '2023-05-15',\n    doctor: {\n      name: 'Dr. John Doe'\n    },\n    diagnosis: 'Hypertension',\n    treatment: 'Prescribed medication and diet changes',\n    notes: 'Patient advised to monitor blood pressure regularly.',\n    created_at: '2023-05-15T10:30:00Z',\n    updated_at: '2023-05-15T11:15:00Z'\n  }, {\n    id: 2,\n    visit_date: '2023-07-20',\n    doctor: {\n      name: 'Dr. Jane Smith'\n    },\n    diagnosis: 'Influenza',\n    treatment: 'Rest, fluids, and over-the-counter medication',\n    notes: 'Patient reported improvement after one week.',\n    created_at: '2023-07-20T09:45:00Z',\n    updated_at: '2023-07-20T10:20:00Z'\n  }];\n  const formatDate = isoDate => {\n    const date = new Date(isoDate);\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Medical Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), medicalRecords.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No medical records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Visit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Treatment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Updated At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: medicalRecords.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(record.visit_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.doctor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.diagnosis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.treatment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(record.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(record.updated_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, record.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewMedicalRecord;\nexport default ViewMedicalRecord;\nvar _c;\n$RefreshReg$(_c, \"ViewMedicalRecord\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ViewMedicalRecord","patientId","medicalRecords","id","visit_date","doctor","name","diagnosis","treatment","notes","created_at","updated_at","formatDate","isoDate","date","Date","options","year","month","day","toLocaleDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","record","_c","$RefreshReg$"],"sources":["C:/Users/LA/Desktop/React/HospitalManagementSystemGrp-10/frontend/src/pages/ViewMedicalRecord.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ViewMedicalRecord = ({ patientId }) => {\r\n  // Sample medical records data\r\n  const medicalRecords = [\r\n    {\r\n      id: 1,\r\n      visit_date: '2023-05-15',\r\n      doctor: { name: 'Dr. John Doe' },\r\n      diagnosis: 'Hypertension',\r\n      treatment: 'Prescribed medication and diet changes',\r\n      notes: 'Patient advised to monitor blood pressure regularly.',\r\n      created_at: '2023-05-15T10:30:00Z',\r\n      updated_at: '2023-05-15T11:15:00Z'\r\n    },\r\n    {\r\n      id: 2,\r\n      visit_date: '2023-07-20',\r\n      doctor: { name: 'Dr. Jane Smith' },\r\n      diagnosis: 'Influenza',\r\n      treatment: 'Rest, fluids, and over-the-counter medication',\r\n      notes: 'Patient reported improvement after one week.',\r\n      created_at: '2023-07-20T09:45:00Z',\r\n      updated_at: '2023-07-20T10:20:00Z'\r\n    },\r\n\r\n  ];\r\n\r\n  const formatDate = (isoDate) => {\r\n    const date = new Date(isoDate);\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return date.toLocaleDateString('en-US', options);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Medical Records</h2>\r\n      {medicalRecords.length === 0 ? (\r\n        <p>No medical records found.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date of Visit</th>\r\n              <th>Doctor</th>\r\n              <th>Diagnosis</th>\r\n              <th>Treatment</th>\r\n              <th>Notes</th>\r\n              <th>Created At</th>\r\n              <th>Last Updated At</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {medicalRecords.map(record => (\r\n              <tr key={record.id}>\r\n                <td>{formatDate(record.visit_date)}</td>\r\n                <td>{record.doctor.name}</td>\r\n                <td>{record.diagnosis}</td>\r\n                <td>{record.treatment}</td>\r\n                <td>{record.notes}</td>\r\n                <td>{formatDate(record.created_at)}</td>\r\n                <td>{formatDate(record.updated_at)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewMedicalRecord;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}