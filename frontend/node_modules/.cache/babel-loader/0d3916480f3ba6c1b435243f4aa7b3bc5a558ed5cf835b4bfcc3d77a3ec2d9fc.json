{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LA\\\\Desktop\\\\React\\\\HospitalManagementSystemGrp-10\\\\frontend\\\\src\\\\pages\\\\ViewAllAppointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewAllAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n\n  // Sample data for testing\n  const sampleAppointments = [{\n    id: 1,\n    patient_id: 101,\n    doctor_id: 201,\n    appointment_date: '2024-06-15 10:00 AM',\n    status: 'scheduled',\n    reason: 'Routine check-up',\n    created_at: '2024-06-10T08:00:00Z',\n    updated_at: '2024-06-10T08:30:00Z'\n  }, {\n    id: 2,\n    patient_id: 102,\n    doctor_id: 201,\n    appointment_date: '2024-06-16 02:30 PM',\n    status: 'completed',\n    reason: 'Follow-up consultation',\n    created_at: '2024-06-11T09:00:00Z',\n    updated_at: '2024-06-16T15:00:00Z'\n  }\n  // Add more sample appointments as needed\n  ];\n\n  // Simulating fetching data from an API\n  useEffect(() => {\n    // In a real application, replace this with API call to fetch appointments\n    // For now, set sample data\n    setAppointments(sampleAppointments);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.appointment_date.split(' ')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.appointment_date.split(' ')[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.patient_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewAllAppointments, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = ViewAllAppointments;\nexport default ViewAllAppointments;\nvar _c;\n$RefreshReg$(_c, \"ViewAllAppointments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ViewAllAppointments","_s","appointments","setAppointments","sampleAppointments","id","patient_id","doctor_id","appointment_date","status","reason","created_at","updated_at","children","fileName","_jsxFileName","lineNumber","columnNumber","map","appointment","index","split","_c","$RefreshReg$"],"sources":["C:/Users/LA/Desktop/React/HospitalManagementSystemGrp-10/frontend/src/pages/ViewAllAppointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ViewAllAppointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Sample data for testing\r\n  const sampleAppointments = [\r\n    {\r\n      id: 1,\r\n      patient_id: 101,\r\n      doctor_id: 201,\r\n      appointment_date: '2024-06-15 10:00 AM',\r\n      status: 'scheduled',\r\n      reason: 'Routine check-up',\r\n      created_at: '2024-06-10T08:00:00Z',\r\n      updated_at: '2024-06-10T08:30:00Z',\r\n    },\r\n    {\r\n      id: 2,\r\n      patient_id: 102,\r\n      doctor_id: 201,\r\n      appointment_date: '2024-06-16 02:30 PM',\r\n      status: 'completed',\r\n      reason: 'Follow-up consultation',\r\n      created_at: '2024-06-11T09:00:00Z',\r\n      updated_at: '2024-06-16T15:00:00Z',\r\n    },\r\n    // Add more sample appointments as needed\r\n  ];\r\n\r\n  // Simulating fetching data from an API\r\n  useEffect(() => {\r\n    // In a real application, replace this with API call to fetch appointments\r\n    // For now, set sample data\r\n    setAppointments(sampleAppointments);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Appointments</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Date</th>\r\n            <th>Time</th>\r\n            <th>Patient ID</th>\r\n            <th>Status</th>\r\n            <th>Reason</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {appointments.map((appointment, index) => (\r\n            <tr key={index}>\r\n              <td>{appointment.id}</td>\r\n              <td>{appointment.appointment_date.split(' ')[0]}</td>\r\n              <td>{appointment.appointment_date.split(' ')[1]}</td>\r\n              <td>{appointment.patient_id}</td>\r\n              <td>{appointment.status}</td>\r\n              <td>{appointment.reason}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAllAppointments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}